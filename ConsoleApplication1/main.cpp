#include <iostream>
#include <Windows.h>
#include "ServerNet.h"
int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	mainNet();
	return 0;
}
// Несколько строк о программе. Данная программа "сырая " и не законченная.  Разработана для Windows 64 и mySQL 
//программа задумывалась на один сервер и несколько клиентоав сообщения(пока реализована и тестировна на один клиент)
//Программа не создает базы данных базу нужно создать отдельно,  обращение к базе идет строкой
//if (!mysql_real_connect(&mysql, "localhost", "root", "sega261970", "testdb", NULL, NULL, 0)) 
//где "testdb" название базы данных, "sega261970" пароль
//таблицы с данными создаются программой 
//_log_pass - таблица логинов и паролей, состояние: работает и заполняется при создании логинов и паролей
//onlineusers -таблица активных пользователей клиентов, запись создается при авторизации и удаляется при  закрытии программы средсвами клавиатуры
//message - данную таблицу не успел реализовать, но она будет содержать сообщения от пользователей
//программа многопоточная в клиенской части обмен между потоками реализовал через файл (в качестве эксперимента)
//в серверной части программы обмен между потоками через параметры.
//так как я буду доделывать программы там остается много муссора!!! 
//также в программе реализована связь между клиентом и сервером посредством сообщений 

/* У клиента с сервером есть поля сообения и они будут кодироваться так:
  -- программа имеет немколько состояний:
	 1. состояние: программа не активна т.е нет подключения нет сообщений
	 2. Создание нового лога и пароля
	 3. Успешное создание лога и павроля
	 4. Не удалось создать лог и пароль.
	 5. Такой лог или пароль уже есть
	 6. Авторизация  на лог и пароль
	 7. Успешная авторизация  лог и пароль  при авторизации
	 8. Не успешный лог или пароль при авторизации
	 9. Сколько текущих пользователе в online
	 10. Ответ о количестве пользователей
	 11 Получить сообщения от пользователей
	 12 Ответ о получения сообщения
	 13 Находиться в режиме успешной автризации

  ---Структура сообщения
	 -- Пароль пользователя  отправителя сообщения >> PasswordUser:value
	 -- Имя пользователя  отправителя сообщения   >> NameUserSend:value
	 -- Имя пользователя принимающего сообщения   >> NameUserRecive:value
	 -- Запрос на измененимя состояния (команда) >>  Request:value;
	 -- Текущее состояние программы  >> CarrentState:value;
	 -- Сообщение пользователей >> Messaqge:value;
	 -- Начало сообщение маркируется знаком *
	 -- Конец сообщения маркируется  знаком &
	 -- Поле сообщения отделяется друг от друга :
	 -- Пробелы не допускаются
	 Нгапример:
	 ---Запрос на создания лога и пароля выглядеть будет так:
		 -- PasswordUser:123123
		 -- NameUserSend:Misha
		 --  NameUserRecive:-- (нет получателя ) для сообщения
		 --  Request:2;
		 --  CarrentState:1
		 --  NumCurrMess:1 //номер сообщения
		 --  NumMess:1  //количество сообщение
		 --  Messaqge:--(нет сообщения)


			*123123:Misha:--:2:1:1:1--&

 */